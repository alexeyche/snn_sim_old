const$setValue("adex neuron", "slope", 0.0)
const$setValue("adex neuron", "a", 0.0)
const$setValue("adex neuron", "b", 0.0)
pl = RPrepLayer$new(const, saveStat, jobs)
plot_tuning_curves(pl)
require(Rsnn)
const_ini = "/home/alexeyche/prog/snn_sim/constants.ini"
jobs = 8
saveStat = TRUE
const = RConstants$new(const_ini)
const$setValue("preprocess","tuning_curve", "SigmaTC")
const$setValue("preprocess","intercept", "-1:1")
const$setValue("preprocess","sigma", 0.2)
const$setValue("preprocess","sigma_gain", "1:2")
const$setValue("preprocess","prob_next_sigma", 1.0)
const$setValue("preprocess","max_curve_num", 2)
const$setValue("preprocess","N", 2)
const$setValue("adex neuron", "t_ref", 2.0)
const$setValue("adex neuron", "slope", 0.0)
const$setValue("adex neuron", "a", 0.0)
const$setValue("adex neuron", "b", 0.0)
pl = RPrepLayer$new(const, saveStat, jobs)
plot_tuning_curves(pl)
require(Rsnn)
const_ini = "/home/alexeyche/prog/snn_sim/constants.ini"
jobs = 8
saveStat = TRUE
const = RConstants$new(const_ini)
const$setValue("preprocess","tuning_curve", "SigmaTC")
const$setValue("preprocess","intercept", "-1:1")
const$setValue("preprocess","sigma", 0.2)
const$setValue("preprocess","sigma_gain", "1:2")
const$setValue("preprocess","prob_next_sigma", 1.0)
const$setValue("preprocess","max_curve_num", 2)
const$setValue("preprocess","N", 2)
const$setValue("adex neuron", "t_ref", 2.0)
const$setValue("adex neuron", "slope", 0.0)
const$setValue("adex neuron", "a", 0.0)
const$setValue("adex neuron", "b", 0.0)
pl = RPrepLayer$new(const, saveStat, jobs)
plot_tuning_curves(pl)
require(Rsnn)
const_ini = "/home/alexeyche/prog/snn_sim/constants.ini"
jobs = 8
saveStat = TRUE
const = RConstants$new(const_ini)
const$setValue("preprocess","tuning_curve", "SigmaTC")
const$setValue("preprocess","intercept", "-1:1")
const$setValue("preprocess","sigma", 0.2)
const$setValue("preprocess","sigma_gain", "1:2")
const$setValue("preprocess","prob_next_sigma", 1.0)
const$setValue("preprocess","max_curve_num", 2)
const$setValue("preprocess","N", 2)
const$setValue("adex neuron", "t_ref", 2.0)
const$setValue("adex neuron", "slope", 0.0)
const$setValue("adex neuron", "a", 0.0)
const$setValue("adex neuron", "b", 0.0)
pl = RPrepLayer$new(const, saveStat, jobs)
plot_tuning_curves(pl)
require(Rsnn)
const_ini = "/home/alexeyche/prog/snn_sim/constants.ini"
jobs = 8
saveStat = TRUE
const = RConstants$new(const_ini)
const$setValue("preprocess","tuning_curve", "SigmaTC")
const$setValue("preprocess","intercept", "-1:1")
const$setValue("preprocess","sigma", 0.2)
const$setValue("preprocess","sigma_gain", "1:2")
const$setValue("preprocess","prob_next_sigma", 1.0)
const$setValue("preprocess","max_curve_num", 2)
const$setValue("preprocess","N", 2)
const$setValue("adex neuron", "t_ref", 2.0)
const$setValue("adex neuron", "slope", 0.0)
const$setValue("adex neuron", "a", 0.0)
const$setValue("adex neuron", "b", 0.0)
pl = RPrepLayer$new(const, saveStat, jobs)
plot_tuning_curves(pl)
require(Rsnn)
const_ini = "/home/alexeyche/prog/snn_sim/constants.ini"
jobs = 8
saveStat = TRUE
const = RConstants$new(const_ini)
const$setValue("preprocess","tuning_curve", "SigmaTC")
const$setValue("preprocess","intercept", "-1:1")
const$setValue("preprocess","sigma", 0.2)
const$setValue("preprocess","sigma_gain", "1:2")
const$setValue("preprocess","prob_next_sigma", 1.0)
const$setValue("preprocess","max_curve_num", 2)
const$setValue("preprocess","N", 2)
const$setValue("adex neuron", "t_ref", 2.0)
const$setValue("adex neuron", "slope", 0.0)
const$setValue("adex neuron", "a", 0.0)
const$setValue("adex neuron", "b", 0.0)
pl = RPrepLayer$new(const, saveStat, jobs)
plot_tuning_curves(pl)
require(Rsnn)
const_ini = "/home/alexeyche/prog/snn_sim/constants.ini"
jobs = 8
saveStat = TRUE
const = RConstants$new(const_ini)
const$setValue("preprocess","tuning_curve", "SigmaTC")
const$setValue("preprocess","intercept", "-1:1")
const$setValue("preprocess","sigma", 0.2)
const$setValue("preprocess","sigma_gain", "1:2")
const$setValue("preprocess","prob_next_sigma", 1.0)
const$setValue("preprocess","max_curve_num", 2)
const$setValue("preprocess","N", 2)
const$setValue("adex neuron", "t_ref", 2.0)
const$setValue("adex neuron", "slope", 0.0)
const$setValue("adex neuron", "a", 0.0)
const$setValue("adex neuron", "b", 0.0)
pl = RPrepLayer$new(const, saveStat, jobs)
plot_tuning_curves(pl)
require(Rsnn)
const_ini = "/home/alexeyche/prog/snn_sim/constants.ini"
jobs = 8
saveStat = TRUE
const = RConstants$new(const_ini)
const$setValue("preprocess","tuning_curve", "SigmaTC")
const$setValue("preprocess","intercept", "-1:1")
const$setValue("preprocess","sigma", 0.2)
const$setValue("preprocess","sigma_gain", "1:2")
const$setValue("preprocess","prob_next_sigma", 1.0)
const$setValue("preprocess","max_curve_num", 2)
const$setValue("preprocess","N", 2)
const$setValue("adex neuron", "t_ref", 2.0)
const$setValue("adex neuron", "slope", 0.0)
const$setValue("adex neuron", "a", 0.0)
const$setValue("adex neuron", "b", 0.0)
pl = RPrepLayer$new(const, saveStat, jobs)
plot_tuning_curves(pl)
require(Rsnn)
const_ini = "/home/alexeyche/prog/snn_sim/constants.ini"
jobs = 8
saveStat = TRUE
const = RConstants$new(const_ini)
const$setValue("preprocess","tuning_curve", "SigmaTC")
const$setValue("preprocess","intercept", "-1:1")
const$setValue("preprocess","sigma", 0.2)
const$setValue("preprocess","sigma_gain", "1:2")
const$setValue("preprocess","prob_next_sigma", 1.0)
const$setValue("preprocess","max_curve_num", 2)
const$setValue("preprocess","N", 2)
const$setValue("adex neuron", "t_ref", 2.0)
const$setValue("adex neuron", "slope", 0.0)
const$setValue("adex neuron", "a", 0.0)
const$setValue("adex neuron", "b", 0.0)
pl = RPrepLayer$new(const, saveStat, jobs)
plot_tuning_curves(pl)
require(Rsnn)
const_ini = "/home/alexeyche/prog/snn_sim/constants.ini"
jobs = 8
saveStat = TRUE
const = RConstants$new(const_ini)
const$setValue("preprocess","tuning_curve", "SigmaTC")
const$setValue("preprocess","intercept", "-1:1")
const$setValue("preprocess","sigma", 0.2)
const$setValue("preprocess","sigma_gain", "1:2")
const$setValue("preprocess","prob_next_sigma", 1.0)
const$setValue("preprocess","max_curve_num", 2)
const$setValue("preprocess","N", 2)
const$setValue("adex neuron", "t_ref", 2.0)
const$setValue("adex neuron", "slope", 0.0)
const$setValue("adex neuron", "a", 0.0)
const$setValue("adex neuron", "b", 0.0)
pl = RPrepLayer$new(const, saveStat, jobs)
plot_tuning_curves(pl)
require(Rsnn)
const_ini = "/home/alexeyche/prog/snn_sim/constants.ini"
jobs = 8
saveStat = TRUE
const = RConstants$new(const_ini)
const$setValue("preprocess","tuning_curve", "SigmaTC")
const$setValue("preprocess","intercept", "-1:1")
const$setValue("preprocess","sigma", "0.1:0.2")
const$setValue("preprocess","sigma_gain", "1:2")
const$setValue("preprocess","prob_next_sigma", 1.0)
const$setValue("preprocess","max_curve_num", 2)
const$setValue("preprocess","N", 2)
const$setValue("adex neuron", "t_ref", 2.0)
const$setValue("adex neuron", "slope", 0.0)
const$setValue("adex neuron", "a", 0.0)
const$setValue("adex neuron", "b", 0.0)
pl = RPrepLayer$new(const, saveStat, jobs)
plot_tuning_curves(pl)
require(Rsnn)
const_ini = "/home/alexeyche/prog/snn_sim/constants.ini"
jobs = 8
saveStat = TRUE
const = RConstants$new(const_ini)
const$setValue("preprocess","tuning_curve", "SigmaTC")
const$setValue("preprocess","intercept", "-1:1")
const$setValue("preprocess","sigma", "0.1:0.2")
const$setValue("preprocess","sigma_gain", "1:2")
const$setValue("preprocess","prob_next_sigma", 1.0)
const$setValue("preprocess","max_curve_num", 2)
const$setValue("preprocess","N", 2)
const$setValue("adex neuron", "t_ref", 2.0)
const$setValue("adex neuron", "slope", 0.0)
const$setValue("adex neuron", "a", 0.0)
const$setValue("adex neuron", "b", 0.0)
pl = RPrepLayer$new(const, saveStat, jobs)
plot_tuning_curves(pl)
require(Rsnn)
const_ini = "/home/alexeyche/prog/snn_sim/constants.ini"
jobs = 8
saveStat = TRUE
const = RConstants$new(const_ini)
const$setValue("preprocess","tuning_curve", "SigmaTC")
const$setValue("preprocess","intercept", "-1:1")
const$setValue("preprocess","sigma", "0.1:0.2")
const$setValue("preprocess","sigma_gain", "1:2")
const$setValue("preprocess","prob_next_sigma", 1.0)
const$setValue("preprocess","max_curve_num", 2)
const$setValue("preprocess","N", 2)
const$setValue("adex neuron", "t_ref", 2.0)
const$setValue("adex neuron", "slope", 0.0)
const$setValue("adex neuron", "a", 0.0)
const$setValue("adex neuron", "b", 0.0)
pl = RPrepLayer$new(const, saveStat, jobs)
plot_tuning_curves(pl)
require(Rsnn)
const_ini = "/home/alexeyche/prog/snn_sim/constants.ini"
jobs = 8
saveStat = TRUE
const = RConstants$new(const_ini)
const$setValue("preprocess","tuning_curve", "SigmaTC")
const$setValue("preprocess","intercept", "-1:1")
const$setValue("preprocess","sigma", "0.1:0.2")
const$setValue("preprocess","sigma_gain", "1:2")
const$setValue("preprocess","prob_next_sigma", 0.2)
const$setValue("preprocess","max_curve_num", 2)
const$setValue("preprocess","N", 2)
const$setValue("adex neuron", "t_ref", 2.0)
const$setValue("adex neuron", "slope", 0.0)
const$setValue("adex neuron", "a", 0.0)
const$setValue("adex neuron", "b", 0.0)
pl = RPrepLayer$new(const, saveStat, jobs)
plot_tuning_curves(pl)
require(Rsnn)
const_ini = "/home/alexeyche/prog/snn_sim/constants.ini"
jobs = 8
saveStat = TRUE
const = RConstants$new(const_ini)
const$setValue("preprocess","tuning_curve", "SigmaTC")
const$setValue("preprocess","intercept", "-1:1")
const$setValue("preprocess","sigma", "0.1:0.2")
const$setValue("preprocess","sigma_gain", "1:2")
const$setValue("preprocess","prob_next_sigma", 0.2)
const$setValue("preprocess","max_curve_num", 2)
const$setValue("preprocess","N", 100)
const$setValue("adex neuron", "t_ref", 2.0)
const$setValue("adex neuron", "slope", 0.0)
const$setValue("adex neuron", "a", 0.0)
const$setValue("adex neuron", "b", 0.0)
pl = RPrepLayer$new(const, saveStat, jobs)
plot_tuning_curves(pl)
X = vector("list",10)
labels = loadMatrix("~/prog/sim/ts/synthetic_control/synthetic_control_TRAIN_60_labels",1)
ulabels = unique(labels)
for(i in 1:length(X)) {
X[[i]] = loadMatrix("~/prog/sim/ts/synthetic_control/synthetic_control_TRAIN_60",i)
}
p = pl$run(X, labels)
prast(p[[1]],T0=0,Tmax=180)
s = pl$getStat()
V = s[[1]]
w = s[[2]]
plot_tuning_curves(pl)
X
X = vector("list",10)
labels = loadMatrix("~/prog/sim/ts/synthetic_control/synthetic_control_TRAIN_60_labels",1)
ulabels = unique(labels)
for(i in 1:length(X)) {
X[[i]] = loadMatrix("~/prog/sim/ts/synthetic_control/synthetic_control_TRAIN_60",i)
}
p = pl$run(X, labels)
prast(p[[1]],T0=0,Tmax=180)
s = pl$getStat()
V = s[[1]]
w = s[[2]]
p
require(Rsnn)
const_ini = "/home/alexeyche/prog/snn_sim/constants.ini"
jobs = 8
saveStat = TRUE
const = RConstants$new(const_ini)
const$setValue("preprocess","tuning_curve", "SigmaTC")
const$setValue("preprocess","intercept", "-1:1")
const$setValue("preprocess","sigma", "0.1:0.2")
const$setValue("preprocess","sigma_gain", "5")
const$setValue("preprocess","prob_next_sigma", 0.2)
const$setValue("preprocess","max_curve_num", 2)
const$setValue("preprocess","N", 100)
const$setValue("adex neuron", "t_ref", 2.0)
const$setValue("adex neuron", "slope", 0.0)
const$setValue("adex neuron", "a", 0.0)
const$setValue("adex neuron", "b", 0.0)
pl = RPrepLayer$new(const, saveStat, jobs)
plot_tuning_curves(pl)
X = vector("list",10)
labels = loadMatrix("~/prog/sim/ts/synthetic_control/synthetic_control_TRAIN_60_labels",1)
ulabels = unique(labels)
for(i in 1:length(X)) {
X[[i]] = loadMatrix("~/prog/sim/ts/synthetic_control/synthetic_control_TRAIN_60",i)
}
p = pl$run(X, labels)
prast(p[[1]],T0=0,Tmax=180)
s = pl$getStat()
require(Rsnn)
const_ini = "/home/alexeyche/prog/snn_sim/constants.ini"
jobs = 8
saveStat = TRUE
const = RConstants$new(const_ini)
const$setValue("preprocess","tuning_curve", "SigmaTC")
const$setValue("preprocess","intercept", "-1:1")
const$setValue("preprocess","sigma", "0.1:0.2")
const$setValue("preprocess","sigma_gain", "5")
const$setValue("preprocess","prob_next_sigma", 0.2)
const$setValue("preprocess","max_curve_num", 2)
const$setValue("preprocess","N", 10)
const$setValue("adex neuron", "t_ref", 2.0)
const$setValue("adex neuron", "slope", 0.0)
const$setValue("adex neuron", "a", 0.0)
const$setValue("adex neuron", "b", 0.0)
pl = RPrepLayer$new(const, saveStat, jobs)
plot_tuning_curves(pl)
require(Rsnn)
const_ini = "/home/alexeyche/prog/snn_sim/constants.ini"
jobs = 8
saveStat = TRUE
const = RConstants$new(const_ini)
const$setValue("preprocess","tuning_curve", "SigmaTC")
const$setValue("preprocess","intercept", "-1:1")
const$setValue("preprocess","sigma", "0.05:0.05")
const$setValue("preprocess","sigma_gain", "5")
const$setValue("preprocess","prob_next_sigma", 0.2)
const$setValue("preprocess","max_curve_num", 2)
const$setValue("preprocess","N", 10)
const$setValue("adex neuron", "t_ref", 2.0)
const$setValue("adex neuron", "slope", 0.0)
const$setValue("adex neuron", "a", 0.0)
const$setValue("adex neuron", "b", 0.0)
pl = RPrepLayer$new(const, saveStat, jobs)
plot_tuning_curves(pl)
require(Rsnn)
const_ini = "/home/alexeyche/prog/snn_sim/constants.ini"
jobs = 8
saveStat = TRUE
const = RConstants$new(const_ini)
const$setValue("preprocess","tuning_curve", "SigmaTC")
const$setValue("preprocess","intercept", "-1:1")
const$setValue("preprocess","sigma", "0.05:0.05")
const$setValue("preprocess","sigma_gain", "5")
const$setValue("preprocess","prob_next_sigma", 0.2)
const$setValue("preprocess","max_curve_num", 2)
const$setValue("preprocess","N", 10)
const$setValue("adex neuron", "t_ref", 2.0)
const$setValue("adex neuron", "slope", 0.0)
const$setValue("adex neuron", "a", 0.0)
const$setValue("adex neuron", "b", 0.0)
pl = RPrepLayer$new(const, saveStat, jobs)
plot_tuning_curves(pl)
X = vector("list",10)
labels = loadMatrix("~/prog/sim/ts/synthetic_control/synthetic_control_TRAIN_60_labels",1)
ulabels = unique(labels)
for(i in 1:length(X)) {
X[[i]] = loadMatrix("~/prog/sim/ts/synthetic_control/synthetic_control_TRAIN_60",i)
}
p = pl$run(X, labels)
prast(p[[1]],T0=0,Tmax=180)
require(Rsnn)
const_ini = "/home/alexeyche/prog/snn_sim/constants.ini"
jobs = 8
saveStat = TRUE
const = RConstants$new(const_ini)
const$setValue("preprocess","tuning_curve", "SigmaTC")
const$setValue("preprocess","intercept", "-1:1")
const$setValue("preprocess","sigma", "0.05:0.05")
const$setValue("preprocess","sigma_gain", "10")
const$setValue("preprocess","prob_next_sigma", 0.2)
const$setValue("preprocess","max_curve_num", 2)
const$setValue("preprocess","N", 10)
const$setValue("adex neuron", "t_ref", 2.0)
const$setValue("adex neuron", "slope", 0.0)
const$setValue("adex neuron", "a", 0.0)
const$setValue("adex neuron", "b", 0.0)
pl = RPrepLayer$new(const, saveStat, jobs)
plot_tuning_curves(pl)
X = vector("list",10)
labels = loadMatrix("~/prog/sim/ts/synthetic_control/synthetic_control_TRAIN_60_labels",1)
ulabels = unique(labels)
for(i in 1:length(X)) {
X[[i]] = loadMatrix("~/prog/sim/ts/synthetic_control/synthetic_control_TRAIN_60",i)
}
p = pl$run(X, labels)
prast(p[[1]],T0=0,Tmax=180)
s = pl$getStat()
V = s[[1]]
w = s[[2]]
require(Rsnn)
const_ini = "/home/alexeyche/prog/snn_sim/constants.ini"
jobs = 8
saveStat = TRUE
const = RConstants$new(const_ini)
const$setValue("preprocess","tuning_curve", "SigmaTC")
const$setValue("preprocess","intercept", "-1:1")
const$setValue("preprocess","sigma", "0.05:0.05")
const$setValue("preprocess","sigma_gain", "30")
const$setValue("preprocess","prob_next_sigma", 0.2)
const$setValue("preprocess","max_curve_num", 2)
const$setValue("preprocess","N", 10)
const$setValue("adex neuron", "t_ref", 2.0)
const$setValue("adex neuron", "slope", 0.0)
const$setValue("adex neuron", "a", 0.0)
const$setValue("adex neuron", "b", 0.0)
pl = RPrepLayer$new(const, saveStat, jobs)
plot_tuning_curves(pl)
X = vector("list",10)
labels = loadMatrix("~/prog/sim/ts/synthetic_control/synthetic_control_TRAIN_60_labels",1)
ulabels = unique(labels)
for(i in 1:length(X)) {
X[[i]] = loadMatrix("~/prog/sim/ts/synthetic_control/synthetic_control_TRAIN_60",i)
}
p = pl$run(X, labels)
prast(p[[1]],T0=0,Tmax=180)
s = pl$getStat()
plot_tuning_curves(pl)
source('~/prog/snn_sim/r_package/r_scripts/sigma_curves_test.R', echo=TRUE)
setwd("~/prog/snn_sim/r_package/r_scripts")
source('~/prog/snn_sim/r_package/r_scripts/gen_ucr_data.R', echo=TRUE)
train_dataset_inter_bin
unlist(train_dataset_inter_bin)
plotl(unlist(train_dataset_inter_bin)[1:60])
source('~/prog/snn_sim/r_package/r_scripts/gen_ucr_data.R', echo=TRUE)
source('~/prog/snn_sim/r_package/r_scripts/gen_ucr_data.R', echo=TRUE)
source('~/prog/snn_sim/r_package/r_scripts/gen_ucr_data.R', echo=TRUE)
loadMatrix("~/prog/snn_sim/build/wopt.bin",1)
gr_pl(loadMatrix("~/prog/snn_sim/build/wopt.bin",1))
sp = loadMatrix("~/prog/snn_sim/build/out.bin",1)
sp
sp[1,]
mean_area = 1:length(x)
require(SynchWave)
source('filt_funcs.R')
w_opt = loadMatrix("~/prog/snn_sim/build/wopt.bin",1)
x = loadMatrix("~/prog/sim/ts/synthetic_control/synthetic_control_TRAIN_60_cat.bin",1)
sp = loadMatrix("~/prog/snn_sim/build/out.bin",1)
w_opt = loadMatrix("~/prog/snn_sim/build/wopt.bin",1)
#opt_res = optim(w, m_E, m_dEdw, method="BFGS",control=list(trace=1), hessian=FALSE)
#w_opt = opt_res$par
mean_area = 1:length(x)
w_opt = loadMatrix("~/prog/snn_sim/build/wopt.bin",1)
x = loadMatrix("~/prog/sim/ts/synthetic_control/synthetic_control_TRAIN_60_cat.bin",1)
sp = loadMatrix("~/prog/snn_sim/build/out.bin",1)
w_opt = loadMatrix("~/prog/snn_sim/build/wopt.bin",1)
#opt_res = optim(w, m_E, m_dEdw, method="BFGS",control=list(trace=1), hessian=FALSE)
#w_opt = opt_res$par
mean_area = 1:length(x)
mean_area
x = loadMatrix("~/prog/sim/ts/synthetic_control/synthetic_control_TRAIN_60_cat.bin",1)
y = loadMatrix("~/prog/snn_sim/build/out.bin",1)
w_opt = loadMatrix("~/prog/snn_sim/build/wopt.bin",1)
#opt_res = optim(w, m_E, m_dEdw, method="BFGS",control=list(trace=1), hessian=FALSE)
#w_opt = opt_res$par
mean_area = 1:length(x)
area_cut = mean_area
if(length(area_cut) > 200) {
area_cut = area_cut[1:200]
}
d = conv_mat(mean_area,y,w_opt)
L = ncol(w_opt)
K
L
#opt_res = optim(w, m_E, m_dEdw, method="BFGS",control=list(trace=1), hessian=FALSE)
#w_opt = opt_res$par
mean_area = 1:length(x)
area_cut = mean_area
if(length(area_cut) > 200) {
area_cut = area_cut[1:200]
}
d = conv_mat(mean_area,y,w_opt)
l
source('~/prog/snn_sim/r_package/r_scripts/filt_funcs.R', echo=TRUE)
x = loadMatrix("~/prog/sim/ts/synthetic_control/synthetic_control_TRAIN_60_cat.bin",1)
y = loadMatrix("~/prog/snn_sim/build/out.bin",1)
w_opt = loadMatrix("~/prog/snn_sim/build/wopt.bin",1)
#opt_res = optim(w, m_E, m_dEdw, method="BFGS",control=list(trace=1), hessian=FALSE)
#w_opt = opt_res$par
mean_area = 1:length(x)
area_cut = mean_area
if(length(area_cut) > 200) {
area_cut = area_cut[1:200]
}
d = conv_mat(mean_area,y,w_opt)
source('~/prog/snn_sim/r_package/r_scripts/filt_funcs.R', echo=TRUE)
x = loadMatrix("~/prog/sim/ts/synthetic_control/synthetic_control_TRAIN_60_cat.bin",1)
y = loadMatrix("~/prog/snn_sim/build/out.bin",1)
w_opt = loadMatrix("~/prog/snn_sim/build/wopt.bin",1)
#opt_res = optim(w, m_E, m_dEdw, method="BFGS",control=list(trace=1), hessian=FALSE)
#w_opt = opt_res$par
mean_area = 1:length(x)
area_cut = mean_area
if(length(area_cut) > 200) {
area_cut = area_cut[1:200]
}
d = conv_mat(mean_area,y,w_opt)
d = conv_mat(1:100,y,w_opt)
d
plotl(d)
plotl(y[1:100])
plotl(x[1:100])
